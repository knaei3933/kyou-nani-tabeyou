const http = require('http');
const fs = require('fs');
const path = require('path');

const port = 3000;

const server = http.createServer((req, res) => {
  console.log(`${req.method} ${req.url}`);
  
  // CORS Ìó§Îçî Ï∂îÍ∞Ä
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  
  if (req.method === 'OPTIONS') {
    res.writeHead(200);
    res.end();
    return;
  }
  
  // ÎùºÏö∞ÌåÖ
  if (req.url === '/' || req.url === '/index.html') {
    serveFile(res, 'test-index.html', 'text/html');
  } else if (req.url === '/simple-test') {
    serveFile(res, 'test-simple.html', 'text/html');
  } else if (req.url === '/manifest.json') {
    serveFile(res, 'public/manifest.json', 'application/json');
  } else if (req.url === '/sw.js') {
    serveFile(res, 'public/sw.js', 'application/javascript');
  } else if (req.url === '/api/recipes/simple') {
    handleAPI(req, res);
  } else {
    res.writeHead(404, {'Content-Type': 'text/html'});
    res.end('<h1>404 Not Found</h1>');
  }
});

function serveFile(res, filePath, contentType) {
  const fullPath = path.join(__dirname, filePath);
  
  fs.readFile(fullPath, (err, data) => {
    if (err) {
      console.error('File read error:', err);
      res.writeHead(404, {'Content-Type': 'text/html'});
      res.end('<h1>File Not Found</h1>');
      return;
    }
    
    res.writeHead(200, {'Content-Type': contentType});
    res.end(data);
  });
}

function handleAPI(req, res) {
  const recipes = [
    {
      id: 1,
      title: "ÍπÄÏπòÎ≥∂ÏùåÎ∞•",
      description: "ÍπÄÏπòÏôÄ Î∞•ÏúºÎ°ú ÎßåÎìúÎäî Í∞ÑÎã®Ìïú Î≥∂ÏùåÎ∞•",
      ingredients: [
        {name: "ÍπÄÏπò", amount: "100", unit: "g"},
        {name: "Î∞•", amount: "1", unit: "Í≥µÍ∏∞"},
        {name: "Í≥ÑÎûÄ", amount: "1", unit: "Í∞ú"}
      ],
      cookingTime: 10,
      difficulty: "easy",
      cuisine: "ÌïúÏãù"
    },
    {
      id: 2,
      title: "Í≥ÑÎûÄÌõÑÎùºÏù¥",
      description: "Í∞ÑÎã®ÌïòÍ≥† Îπ†Î•∏ Í≥ÑÎûÄ ÏöîÎ¶¨",
      ingredients: [
        {name: "Í≥ÑÎûÄ", amount: "2", unit: "Í∞ú"},
        {name: "Í∏∞Î¶Ñ", amount: "1", unit: "ÌÅ∞Ïà†"}
      ],
      cookingTime: 5,
      difficulty: "easy",
      cuisine: "Í∏∞Î≥∏"
    }
  ];

  res.writeHead(200, {'Content-Type': 'application/json'});
  
  if (req.method === 'GET') {
    res.end(JSON.stringify({recipes: recipes}));
  } else if (req.method === 'POST') {
    res.end(JSON.stringify({recommendations: [recipes[0]]}));
  }
}

server.listen(port, 'localhost', () => {
  console.log('üöÄ ÏÑúÎ≤ÑÍ∞Ä http://localhost:3000 ÏóêÏÑú Ïã§ÌñâÏ§ëÏûÖÎãàÎã§!');
  console.log('üì± Î∏åÎùºÏö∞Ï†ÄÏóêÏÑú Ï†ëÏÜçÌï¥Î≥¥ÏÑ∏Ïöî!');
});

server.on('error', (err) => {
  console.error('ÏÑúÎ≤Ñ ÏóêÎü¨:', err);
}); 